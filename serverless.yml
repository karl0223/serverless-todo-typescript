# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: karlserverless
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: todo-typescript
# "service" is the name of this project. This will also be added to your AWS resource names.
service: serverless-todo

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    DB_NAME: ${self:custom.db.${opt:stage}.DB_NAME}
    DB_USER: ${self:custom.db.${opt:stage}.DB_USER}
    DB_PASSWORD: ${self:custom.db.${opt:stage}.DB_PASSWORD}
    DB_HOST: ${self:custom.db.${opt:stage}.DB_HOST}

custom:
  db:
    local:
      DB_NAME: serverless-local
      DB_USER: postgres
      DB_PASSWORD: password
      DB_HOST: localhost
    prod:
      DB_NAME: serverless-postgres
      DB_USER: serverlessUser
      DB_PASSWORD: serverlessadmin
      DB_HOST: serverless-postgres.cxckquwok9t2.us-east-1.rds.amazonaws.com

  webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true

plugins:
  - serverless-webpack
  - serverless-offline

package:
  exclude:
    - node_modules/**
    - src/**/*.test.ts

functions:
  test-hello:
    handler: src/handlers/test-hello.handler
    events:
      - http: "GET /test-hello"

  hello:
    handler: src/handlers/hello.handler
    events:
      - http:
          method: GET
          path: /hello-ts

  hello-world:
    handler: src/handlers/hello-world.handler
    events:
      - http:
          method: GET
          path: /hello-world

  createTodo:
    handler: src/todo-service/create-todo.createTodo
    events:
      - http:
          method: POST
          path: /create
  
  get-all-todos:
    handler: src/todo-service/get-all-todos.getAllTodos
    events:
      - http:
          method: GET
          path: /todos

